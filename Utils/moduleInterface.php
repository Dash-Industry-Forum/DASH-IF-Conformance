<?php

namespace DASHIF;

  /**
   * Initial description of the interface for the various modules
   */
class ModuleInterface
{
    public $name;
    public $detected;
    protected $enabled;
    protected $messages;
    protected $warnings;
    protected $errors;

    public function __construct()
    {
        $this->name = "INTERFACE_UNINITIALIZED";
        $this->enabled = false;
        $this->messages = array();
        $this->warnings = array();
        $this->errors = array();
        $this->detected = false;

        $this->addCLIArguments();
    }
    protected function addCLIArguments()
    {
    }

    public function handleArguments()
    {
    }

    public function detectFromManifest()
    {
    }


    public function isEnabled()
    {
        return $this->enabled;
    }

    public function setEnabled($newVal)
    {
        $this->enabled = $newVal;
    }


    protected function message($message)
    {
        $this->messages[] = $message;

        global $modules;
        file_put_contents("moduleLog.txt", var_export($modules, true));
    }



    /**
     * \brief Checks if pre-conditions for MPD Validation are met.
     *
     * This hook is run between loading the MPD DOM and checking the validity of it.
     *
     * \return TRUE if all checks succeeded or no checks are done, FALSE otherwise.
     *
     * \par Module Usage
     * - HBBTV_DVB
     *   - Copies some scripts to the session folder (these are not used at this point)
     *   - <b>!!Re-downloads mpd!!</b>
     *   - Checks maximum allowed size of mpd (before xlink resolution)
     *   - Checks maximum amount of periods (before xlink resolution)
     *   - Writes errors to $mpd_log.txt
     *   - No return value.
     */
    public function hookBeforeMPD()
    {
        global $logger;
        $logger->setModule($this->name);
        $logger->setHook("BeforeMPD");
        $logger->message(null);
    }
    /**
     * A hook that is run between validating the MPD DOM, and reporting on it.
     * Validity check of MPD DOM is ignored when running these hooks.
     * Result Values are used in reporting on the MPD.
     *
     * \par Module Usage
     * - HBBTV_DVB
     *   - Attempts to open $mpd_log.txt, if unsuccessfull no check are done and returns 'undefined'
     *   - Runs common checks, saving to mpd_log
     *   - Runs conditional checks for dvb and hbbtv, saving to mpd_log
     *   - Reads contents of the entire mpd_log file, and retrurns based on its contents.
     *     - <b>!!This ASSUMES no other modules use the same file and inserts checked sequences.!!</b>
     *     - If '###' is found anywhere in the file, return "error"
     *     - Otherwise, if 'Warning' is found anywhere in the file, return "warning"
     *     - Return true otherwise.
     *   - Reads xml from mpd_xml_report, saves the return value, then writes it back in whole.
     * - IOP
     *   - Attempts to open $mpd_log.txt, if unsuccessfull no check are done and returns 'undefined'
     *   - Runs conditional conformance checks and saves them to mpd_log
     *   - Reads contents of the entire mpd_log file, and retrurns based on its contents.
     *     - <b>!!This ASSUMES no other modules use the same file and inserts checked sequences.!!</b>
     *     - If 'DASH-IF IOP 4.3 check violated' if found in the file, return "error"
     *       - This does not occur for messages generated by IOP_ValidateMPD_Common()
     *     - Return true otherwise
     *   - Reads xml from mpd_xml_report, saves the return value, then writes it back in whole.
     * - LOW_LATENCY
     *   - Attempts to open $mpd_log.txt, if unsuccessfull no check are done and returns 'undefined'
     *   - Runs conformance checks and saves them to mpd_log
     *   - Reads contents of the temporary internal buffer, and retrurns based on its contents.
     *     - If 'violated' is found in the internal buffer, return "error"
     *     - Else, if 'warning' is found in the internal buffer, return "warning"
     *     - Else return true
     *   - Reads xml from mpd_xml_report, saves the return value, then writes it back in whole.
     */
    public function hookMPD()
    {
        global $logger;
        $logger->setModule($this->name);
        $logger->setHook("MPD");
        $logger->message(null);
    }

    /**
     * A hook that is run before downloading and validating the first segment
     * of each period-adaptationset combination.
     * Return value is ignored
     *
     * \par Module Usage
     * - CMAF
     *   - Unconditionally appends to the $additional_flags global parameter
     *   - No return value
     * - CTAWAVE (!!hookTracks!!)
     *   - Unconditionally appends to the $additional_flags global parameter
     *   - No return value
     * - HBBTV_DVB
     *   - Conditionally appends to the $additional_flags global parameter
     *   - Returns whether the current representation is a subtitle.
     *     - Creates a folder for the subtitles if any subtitle representation is found.
     */
    public function hookBeforeRepresentation()
    {
        global $logger;
        $logger->setModule($this->name);
        $logger->setHook("BeforeRepresentation");
        $logger->message(null);
    }
    /**
     * A hook that is run after downloading and validating the first segment
     * of each period-adaptationset combination.
     * Return value is added to an unnamed aray and used for reporting.
     *
     * \par Module Usage
     * - CMAF
     *   - Only if representation xml exists:
     *     - Creates a file for writing errors/logs for the current representation.
     *     - Runs various checks, and writes their output to the error/log file.
     *   - Returns an array with 1 element, either 'noerror' 'warning' or 'error'
     *   depending on the contents of the error/log file.
     * - HBBTV_DVB
     *   - Creates a file for writing errors/logs for the current representation.
     *   - Runs various checks, and writes their output to the error/log file.
     *   - Adds images to the global $string_info variable
     *     - Duplicated html ids when called on a stream with multiple representations
     *     - Remove option of add_remove_images is completely broken.
     *   - Returns an array with 1 element, either 'noerror' 'warning' or 'error'
     *   depending on the contents of the error/log file.
     * - IOP
     *   - Runs only if representation xml file exists
     *   - Runs checks, saves in internal buffer
     *   - Writes internal buffer to error/log file
     *   - Reads error/log file for returncode parsing
     *   - Returns an array with 1 element, either 'noerror' 'warning' or 'error'
     *   depending on the contents of the error/log file.
     */
    public function hookRepresentation()
    {
        global $logger;
        $logger->setModule($this->name);
        $logger->setHook("Representation");
        $logger->message(null);
    }

    /**
     * A hook that is run after running a crossRepresentationProcess.
     * Return value is added to the same array as \ref hookBeforeRepresentation.
     *
     * \par Module Usage
     * - HBBTV_DVB
     *   - Calls a function that removes images from an html file, leaving the html crippled.
     * - CMAF (!!hookAdaptationSet!!)
     *   - Compares switching sets against eachother, writes report report to txt file
     *   - Returns an array of errors.
     */
    public function hookBeforeAdaptationSet()
    {
        global $logger;
        $logger->setModule($this->name);
        $logger->setHook("BeforeAdaptationSet");
        $logger->message(null);
    }
    /**
     * A hook that is run after running a crossRepresentationProcess.
     * Return value is added to the same array as \ref hookBeforeRepresentation.
     * Return values are ignored.
     *
     * \par Module Usage
     * - CMAF (!!hookAll!!)
     *   - Runs checks on the presentation
     *     - Selectionset
     *     - AlignedSwitchingSets
     *   - Returns an array of errors.
     * - CTAWAVE
     *   - Runs SelectionSet checks
     *   - Runs Presentation checks
     *   - No return value
     * - HBBTV_DVB
     *   - Creates a content protection report
     *   - Runs crossvalidation over the adaptation sets.
     *   - No return value
     * - IOP
     *   - Runs crossvalidation over the adaptation sets.
     *   - No return value
     * - LOW_LATENCY
     *   - Runs crossvalidation over the adaptation sets.
     *   - No return value
     */
    public function hookAdaptationSet()
    {
        global $logger;
        $logger->setModule($this->name);
        $logger->setHook("AdaptationSet");
        $logger->message(null);
    }

    /**
     * Is called after all the periods have been parsed. Return value is ignored.
     *
     * \par Module Usage
     * - CTAWAVE
     *   - Runs splice point checks
     *   - Runs wave program checks
     *   - No return value
     */
    public function hookPeriod()
    {
        global $logger;
        $logger->setModule($this->name);
        $logger->setHook("Period");
        $logger->message(null);
    }
}
